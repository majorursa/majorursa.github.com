---
title: Git Log
layout: default
---

h2. Using Git Log

h3. git log --stat

If you'd like to see the number of changes in each file, add the --stat option.

!https://lh6.googleusercontent.com/-jaNagkLs3rU/Tu-DuIZKN1I/AAAAAAAACaE/xdNCDuVv6Vw/s800/git-log--stat.jpg!

h3. git log --since="3 weeks ago" --until="yesterday"

Git log also provides an intuitive way to provide a date range, with --since and --until options.

h3. git log -p 

With the -p option, git log will show patches of each of the commits.

!https://lh5.googleusercontent.com/-iULY5TLtYaw/Tu-D5rVPdGI/AAAAAAAACZw/U1Cr0Vh09Ao/s800/git-log-p.jpg!

h3. git log --graph

Git log with the --graph option prints a graph along the left edge to show branches of the repository.

!https://lh4.googleusercontent.com/-y3F733L3w9w/Tu-KMcMnp7I/AAAAAAAACac/YtfG0oN5kaU/s640/git-log-stat-graph-pretty-short.jpg(The stars in the graph show which branch the commits are on.)!

The full command for the graph screenshot above is:
bc. git log --graph --stat --pretty=short

The repository used in the graph example is the git repository itself.  You can clone it here:
bc. git clone git://github.com/gitster/git.git

The repository used for the first two examples are from Drupal.  You can also clone drupal:
bc. git clone --branch 7.x http://git.drupal.org/project/drupal.git

